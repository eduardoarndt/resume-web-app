{"version":3,"sources":["pages/Home.jsx","pages/Register.jsx","pages/View.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","resumes","setResumes","loadResumes","fetch","process","response","json","responseBody","_","map","resume","key","email","console","error","useEffect","Container","Typography","variant","to","Button","color","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","border","scope","name","Register","navigate","useNavigate","location","useLocation","phone","website","experience","form","setForm","onFormInputChange","event","target","value","onSubmit","method","body","JSON","stringify","responseStatus","status","alert","redirectNow","redirectTo","search","replace","Stack","spacing","TextField","label","type","required","onInput","multiline","direction","onClick","View","paramEmail","useParams","loadResume","InputProps","readOnly","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2768976f.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Container,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [resumes, setResumes] = useState([]);\r\n\r\n  const loadResumes = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_RESUME_API_URL + \"/resumes\"\r\n      );\r\n\r\n      const responseBody = await response.json();\r\n\r\n      setResumes((_) =>\r\n        responseBody.map((resume) => ({\r\n          ...resume,\r\n          key: resume.email,\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadResumes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Typography variant=\"h4\">Currículos</Typography>\r\n      <br />\r\n      <Link to={\"/register\"}>\r\n        <Button variant=\"contained\" color=\"success\">\r\n          Cadastrar\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nome</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resumes.map((resume) => (\r\n              <TableRow\r\n                key={resume.email}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {resume.name}\r\n                </TableCell>\r\n                <TableCell>{resume.email}</TableCell>\r\n                <TableCell>\r\n                  <Link to={\"/view/\" + resume.email}>\r\n                    <Button variant=\"contained\">Detalhes</Button>\r\n                  </Link>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Button, Container, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    experience: \"\",\r\n  });\r\n\r\n  const onFormInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_RESUME_API_URL + \"/resumes\",\r\n        { method: \"POST\", body: JSON.stringify(form) }\r\n      );\r\n\r\n      const responseStatus = response.status;\r\n\r\n      if (responseStatus == 200) {\r\n        alert(\"Cadastro realizado!\");\r\n        return redirectNow();\r\n      }\r\n\r\n      if (responseStatus == 400) {\r\n        alert(\"Campo(s) obrigatório(s) não preenchidos!\");\r\n        return;\r\n      }\r\n\r\n      const responseBody = await response.json();\r\n      alert(\"Erro: \" + JSON.stringify(responseBody));\r\n    } catch (error) {\r\n      alert(\"Erro: \" + error);\r\n    }\r\n  };\r\n\r\n  const redirectNow = () => {\r\n    const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\r\n    navigate(redirectTo ? redirectTo : \"/\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Typography variant=\"h4\">Cadastrar novo Currículo</Typography>\r\n      <br />\r\n      <Stack component=\"form\" spacing={2}>\r\n        <TextField\r\n          label=\"Nome\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          required={true}\r\n          value={form.name}\r\n          onInput={onFormInputChange}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Telefone\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          name=\"phone\"\r\n          value={form.phone}\r\n          onInput={onFormInputChange}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          required={true}\r\n          value={form.email}\r\n          onInput={onFormInputChange}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Endereço WEB\"\r\n          type=\"url\"\r\n          variant=\"outlined\"\r\n          name=\"website\"\r\n          value={form.website}\r\n          onInput={onFormInputChange}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Experiência Profissional\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          name=\"experience\"\r\n          multiline={true}\r\n          required={true}\r\n          value={form.experience}\r\n          onInput={onFormInputChange}\r\n        />\r\n      </Stack>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <Button variant=\"contained\" color=\"success\" onClick={onSubmit}>\r\n          Cadastrar\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"error\" onClick={redirectNow}>\r\n          Cancelar\r\n        </Button>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Button, Container, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst View = () => {\r\n  const { email: paramEmail } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    experience: \"\",\r\n  });\r\n\r\n  const loadResume = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_RESUME_API_URL + \"/resumes/\" + paramEmail\r\n      );\r\n      const responseBody = await response.json();\r\n      setForm((_) => responseBody);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadResume();\r\n  }, []);\r\n\r\n  const redirectNow = () => {\r\n    const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\r\n    navigate(redirectTo ? redirectTo : \"/\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Typography variant=\"h4\">Cadastrar novo Currículo</Typography>\r\n      <br />\r\n      <Stack component=\"form\" spacing={2}>\r\n        <TextField\r\n          label=\"Nome\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          value={form.name}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Telefone\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          name=\"phone\"\r\n          value={form.phone}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Endereço WEB\"\r\n          type=\"url\"\r\n          variant=\"outlined\"\r\n          name=\"website\"\r\n          value={form.website}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Experiência Profissional\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          name=\"experience\"\r\n          multiline={true}\r\n          value={form.experience}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n      </Stack>\r\n      <br />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <Button variant=\"contained\" color=\"error\" onClick={redirectNow}>\r\n          Voltar\r\n        </Button>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Register from \"./pages/Register\";\r\nimport View from \"./pages/View\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Home />} />\r\n        <Route exact path=\"/register\" element={<Register />} />\r\n        <Route exact path=\"/view/:email\" element={<View />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}